#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_KHR_shader_subgroup_ballot : enable

#define PAGE_SIZE 512 // 2^9 TODO push constants?
#define LOCAL_SIZE PAGE_SIZE
layout(std430, set = 1, binding = 4) buffer readonly PageTable
{
	uint counter;
	uint pad0; // pad for indirect dispatch
	uint pad1;

	uint nodes[];
} table;

layout(std430, set = 1, binding = 5) buffer PagePool
{
	uint data[];
} pool;

layout(std430, set = 1, binding = 6) buffer writeonly CompactedClusters
{
	uint counter;
	uint wgx;
	uint wgy;
	uint wgz; // todo move this somewhere
	
	uint data[];
} comp;

layout(std430, set = 1, binding = 1) buffer writeonly LightsOut
{
	uint count;
	uint lights[];
} lightsOut;

layout(local_size_x = LOCAL_SIZE) in;
void main()
{
	uint tid = gl_LocalInvocationIndex;

	uint cluster = pool.data[gl_GlobalInvocationID.x];
	bool predicate = cluster > 0;
	uvec4 ballot = subgroupBallot(predicate);
	uint index = subgroupBallotExclusiveBitCount(ballot);
	uint clusterCount = subgroupBallotBitCount(ballot);

	uint offset;
	if (subgroupElect())
	{
		offset = atomicAdd(comp.counter, clusterCount);
		atomicMax(comp.wgx, (offset + clusterCount - 1) / (512 / gl_SubgroupSize) + 1);
	}

	offset = subgroupBroadcastFirst(offset) + index;

	// write to the global memory
	if (predicate)
	{
		comp.data[offset] = cluster;
		pool.data[gl_GlobalInvocationID.x] = offset;
	}
}